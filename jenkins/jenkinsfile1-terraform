#!/usr/bin/env groovy
properties([disableConcurrentBuilds()])

TARGET_BRANCH_NAME = "master"

pipeline {
  agent {
    label 'ubuntu'
  }
  triggers { pollSCM('* * * * *') }
  options {
    timestamps()
  }

  stages {
    stage('Check terraform') {
      steps {
        sh "terraform --version"
      }
    }

    stage('Az login'){
      steps {
        withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
          sh "az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID"
          sh "az account set --subscription $AZURE_SUBSCRIPTION_ID"
        }
      }
    }

    stage('Terraform init') {
      steps {
        sh """
          git checkout "${TARGET_BRANCH_NAME}"
          cd ./tf_vms/
          terraform init
          cd ../tf_sqlserver/
          terraform init
        """
      }
    }

    stage('Terraform apply database') {

      steps {
        withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
          sh """
            terraform apply -auto-approve \
            -var 'subscription_id=$AZURE_SUBSCRIPTION_ID' \
            -var 'client_id=$AZURE_CLIENT_ID' \
            -var 'client_secret=$AZURE_CLIENT_SECRET' \
            -var 'tenant_id=$AZURE_TENANT_ID'"
          """
        }
      }
    }

    stage('Terraform apply vm') {
      steps {
        withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
          sh """
            cd ../tf_vms/
            terraform apply -auto-approve \
            -var 'subscription_id=$AZURE_SUBSCRIPTION_ID' \
            -var 'client_id=$AZURE_CLIENT_ID' \
            -var 'client_secret=$AZURE_CLIENT_SECRET' \
            -var 'tenant_id=$AZURE_TENANT_ID'"
          """
        }
      }
    }
  }
}